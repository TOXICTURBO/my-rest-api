<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="TurboApis - Your ultimate API solution.">
    <meta name="robots" content="index, follow">
    <meta name="author" content="TurboApis">
    <meta name="keywords" content="API, TurboApis, Developer Tools, Software">
    <title>TurboApis | Home</title>

    <meta property="og:site_name" content="TurboApis">
    <meta property="og:title" content="TurboApis">
    <meta property="og:url" content="https://turboapis.com">
    <meta property="og:description" content="TurboApis - Your ultimate API solution.">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css">
    <link rel="shortcut icon" href="https://telegra.ph/file/585c329da45f7d2a6e9dc.png" type="image/x-icon">
    <link rel="stylesheet" href="styles.css">

    <meta name="theme-color" content="#ffffff">
    <script defer src="scripts.js"></script>
</head>

<body>
    <div class="container">
        <div class="text">
            <div class="status">
                <p>STATUS : <span class="typed-text"></span><span class="cursor typing"></span></p>
            </div>
            <hr>
            <div class="readdocs">
                <p>OPEN <a href="/docs" class="docs">DOCS.</a></p>
            </div>
        </div>
        <div class="bottom">
            <p>
                <a href="http://wa.me/916380260672" rel="noopener noreferrer" class="text">
                    <i class="material-icons">whatsapp</i> Whatsapp
                </a>
            </p>
        </div>
    </div>
</body>
<style>
@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300&display=swap');

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: 'Ubuntu', sans-serif;
}

html {
    background: url('https://i.imgur.com/wO3Aity.jpeg') no-repeat center center fixed;
    background-size: cover;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

.container {
    text-align: center;
    color: rgba(0, 191, 255, 0.8);
}

.status {
    animation: animetop 0.8s;
}

.readdocs {
    animation: animebot 0.8s;
}

@keyframes animetop {
    from { top: -200px; opacity: 0; }
    to { top: 0; opacity: 1; }
}

@keyframes animebot {
    from { top: 200px; opacity: 0; }
    to { top: 0; opacity: 1; }
}

p {
    letter-spacing: 0.15em;
    font-size: 15px;
    font-weight: 600;
}

a {
    text-decoration: none;
    color: rgba(0, 191, 255, 0.5);
}

a:hover {
    color: rgba(0, 191, 255, 1);
}

.typed-text {
    color: #00f;
}

.cursor {
    border-right: 0.15em solid #00f;
    animation: typing 1.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
    from { width: 0; }
    to { width: 100%; }
}

@keyframes blink-caret {
    from, to { border-color: transparent; }
    50% { border-color: #00f; }
}

hr {
    margin: 10px auto;
    background: rgba(0, 191, 255, 0.5);
    width: 80%;
    height: 2px;
}

.bottom {
    position: fixed;
    left: 50%;
    bottom: 50px;
    transform: translate(-50%, -50%);
}

</style>
<script>
document.addEventListener("DOMContentLoaded", () => {
    const typedTextSpan = document.querySelector(".typed-text");
    const textArray = ["ACTIVE~", "ONLINE~"];
    const typingDelay = 200;
    const erasingDelay = 100;
    const newTextDelay = 2000;
    let textArrayIndex = 0;
    let charIndex = 0;

    function type() {
        if (charIndex < textArray[textArrayIndex].length) {
            typedTextSpan.textContent += textArray[textArrayIndex].charAt(charIndex);
            charIndex++;
            setTimeout(type, typingDelay);
        } else {
            setTimeout(erase, newTextDelay);
        }
    }

    function erase() {
        if (charIndex > 0) {
            typedTextSpan.textContent = textArray[textArrayIndex].substring(0, charIndex - 1);
            charIndex--;
            setTimeout(erase, erasingDelay);
        } else {
            textArrayIndex++;
            if (textArrayIndex >= textArray.length) textArrayIndex = 0;
            setTimeout(type, typingDelay + 1100);
        }
    }

    setTimeout(type, newTextDelay + 250);
});

</script>

</html>
